-- Selecione todos os títulos de livros na tabela livros
select titulo FROM livros;

-- Selecione todos os nomes de autores nascidos antes de 1900.
select nome FROM autores 
where nascimento < '1900-01-01';

-- Liste todos os livros escritos por 'J.K. Rowling'.
select titulo FROM livros 
where autor_id = 1;

-- Encontre todos os alunos matriculados em 'Engenharia de Software'.
select alunos.nome, matriculas.curso
FROM alunos
INNER JOIN matriculas ON alunos.id = matriculas.aluno_id
WHERE curso = "Engenharia de Software";

-- Calcule a receita total gerada por cada produto.
select produto , SUM(receita) as soma_vendas
from vendas 
group by produto;

-- Determine o número total de livros por autor.
select autores.nome , count(autor_id) as total_livros
from autores
inner join livros on autores.id = livros.autor_id
group by nome;

-- Agrupe os alunos por curso e conte quantos alunos estão matriculados em cada curso.
select curso, COUNT(*) as total_alunos
from matriculas
group by curso;

-- Liste a média de receita para cada produto.
select produto, avg(receita) as media_receita
from vendas
group by produto;
order by produto;

-- Encontre os produtos que geraram uma receita total superior a $10.000.
select produto
from vendas
group by produto
having sum(receita) > 10000.00;

-- Determine os autores que têm mais de 2 livros publicados.
select autores.nome
from autores
inner join livros ON autores.id = livros.autor_id
group by autores.id, autores.nome
having count (livros.id) > 2;

-- Junte as tabelas livros e autores e selecione todos os livros com seus respectivos autores.
select livros.titulo, autores.nome as autor
from livros
inner join autores ON livros.autor_id = autores.id;

-- Liste todos os alunos e os cursos em que estão matriculados.
select alunos.nome as aluno, matriculas.curso
from alunos
left join matriculas ON alunos.id = matriculas.aluno_id;

-- Usando LEFT JOIN, selecione todos os autores e seus livros, incluindo autores que não têm livros publicados.
select autores.nome as autor, IFNULL(livros.titulo, 'Nenhum livro publicado') as livro
from autores
left join livros ON autores.id = livros.autor_id;

-- Com RIGHT JOIN, liste todos os cursos e alunos, mesmo que o curso não tenha nenhum aluno matriculado.
select cursos.curso, ifnull(alunos.nome, 'Nenhum aluno matriculado') as aluno
from cursos
right join matriculas ON cursos.curso = matriculas.curso
left join alunos ON matriculas.aluno_id = alunos.id;

-- Utilizando INNER JOIN, mostre somente os alunos e cursos que possuem correspondência mútua.
select alunos.nome as aluno, matriculas.curso
from alunos
inner join matriculas ON alunos.id = matriculas.aluno_id;
